using System;

namespace CorProf.Bindings
{
    public static partial class CorConsts
    {
        [NativeTypeName("const IID")]
        public static readonly Guid LIBID_ComPlusRuntime = new Guid(0xbed7f4ea, 0x1a96, 0x11d2, 0x8f, 0x8, 0x0, 0xa0, 0xc9, 0xa6, 0x18, 0x6d);

        [NativeTypeName("const IID")]
        public static readonly Guid GUID_ExportedFromComPlus = new Guid(0x90883f05, 0x3d28, 0x11d2, 0x8f, 0x17, 0x0, 0xa0, 0xc9, 0xa6, 0x18, 0x6d);

        [NativeTypeName("const IID")]
        public static readonly Guid GUID_ManagedName = new Guid(0xf21f359, 0xab84, 0x41e8, 0x9a, 0x78, 0x36, 0xd1, 0x10, 0xe6, 0xd2, 0xf9);

        [NativeTypeName("const IID")]
        public static readonly Guid GUID_Function2Getter = new Guid(0x54fc8f55, 0x38de, 0x4703, 0x9c, 0x4e, 0x25, 0x3, 0x51, 0x30, 0x2b, 0x1c);

        [NativeTypeName("const IID")]
        public static readonly Guid CLSID_CorMetaDataDispenserRuntime = new Guid(0x1ec2de53, 0x75cc, 0x11d2, 0x97, 0x75, 0x0, 0xa0, 0xc9, 0xb4, 0xd5, 0xc);

        [NativeTypeName("const IID")]
        public static readonly Guid GUID_DispIdOverride = new Guid(0xcd2bc5c9, 0xf452, 0x4326, 0xb7, 0x14, 0xf9, 0xc5, 0x39, 0xd4, 0xda, 0x58);

        [NativeTypeName("const IID")]
        public static readonly Guid GUID_ForceIEnumerable = new Guid(0xb64784eb, 0xd8d4, 0x4d9b, 0x9a, 0xcd, 0x0e, 0x30, 0x80, 0x64, 0x26, 0xf7);

        [NativeTypeName("const IID")]
        public static readonly Guid GUID_PropGetCA = new Guid(0x2941ff83, 0x88d8, 0x4f73, 0xb6, 0xa9, 0xbd, 0xf8, 0x71, 0x2d, 0x00, 0x0d);

        [NativeTypeName("const IID")]
        public static readonly Guid GUID_PropPutCA = new Guid(0x29533527, 0x3683, 0x4364, 0xab, 0xc0, 0xdb, 0x1a, 0xdd, 0x82, 0x2f, 0xa2);

        [NativeTypeName("const IID")]
        public static readonly Guid CLSID_CLR_v1_MetaData = new Guid(0x005023ca, 0x72b1, 0x11d3, 0x9f, 0xc4, 0x0, 0xc0, 0x4f, 0x79, 0xa0, 0xa3);

        [NativeTypeName("const IID")]
        public static readonly Guid CLSID_CLR_v2_MetaData = new Guid(0xefea471a, 0x44fd, 0x4862, 0x92, 0x92, 0xc, 0x58, 0xd4, 0x6e, 0x1f, 0x3a);

        [NativeTypeName("const IID")]
        public static readonly Guid MetaDataCheckDuplicatesFor = new Guid(0x30fe7be8, 0xd7d9, 0x11d2, 0x9f, 0x80, 0x0, 0xc0, 0x4f, 0x79, 0xa0, 0xa3);

        [NativeTypeName("const IID")]
        public static readonly Guid MetaDataRefToDefCheck = new Guid(0xde3856f8, 0xd7d9, 0x11d2, 0x9f, 0x80, 0x0, 0xc0, 0x4f, 0x79, 0xa0, 0xa3);

        [NativeTypeName("const IID")]
        public static readonly Guid MetaDataNotificationForTokenMovement = new Guid(0xe5d71a4c, 0xd7da, 0x11d2, 0x9f, 0x80, 0x0, 0xc0, 0x4f, 0x79, 0xa0, 0xa3);

        [NativeTypeName("const IID")]
        public static readonly Guid MetaDataSetUpdate = new Guid(0x2eee315c, 0xd7db, 0x11d2, 0x9f, 0x80, 0x0, 0xc0, 0x4f, 0x79, 0xa0, 0xa3);

        [NativeTypeName("const IID")]
        public static readonly Guid MetaDataImportOption = new Guid(0x79700f36, 0x4aac, 0x11d3, 0x84, 0xc3, 0x0, 0x90, 0x27, 0x86, 0x8c, 0xb1);

        [NativeTypeName("const IID")]
        public static readonly Guid MetaDataThreadSafetyOptions = new Guid(0xf7559806, 0xf266, 0x42ea, 0x8c, 0x63, 0xa, 0xdb, 0x45, 0xe8, 0xb2, 0x34);

        [NativeTypeName("const IID")]
        public static readonly Guid MetaDataErrorIfEmitOutOfOrder = new Guid(0x1547872d, 0xdc03, 0x11d2, 0x94, 0x20, 0x0, 0x0, 0xf8, 0x8, 0x34, 0x60);

        [NativeTypeName("const IID")]
        public static readonly Guid MetaDataGenerateTCEAdapters = new Guid(0xdcc9de90, 0x4151, 0x11d3, 0x88, 0xd6, 0x0, 0x90, 0x27, 0x54, 0xc4, 0x3a);

        [NativeTypeName("const IID")]
        public static readonly Guid MetaDataTypeLibImportNamespace = new Guid(0xf17ff889, 0x5a63, 0x11d3, 0x9f, 0xf2, 0x0, 0xc0, 0x4f, 0xf7, 0x43, 0x1a);

        [NativeTypeName("const IID")]
        public static readonly Guid MetaDataLinkerOptions = new Guid(0x47e099b6, 0xae7c, 0x4797, 0x83, 0x17, 0xb4, 0x8a, 0xa6, 0x45, 0xb8, 0xf9);

        [NativeTypeName("const IID")]
        public static readonly Guid MetaDataRuntimeVersion = new Guid(0x47e099b7, 0xae7c, 0x4797, 0x83, 0x17, 0xb4, 0x8a, 0xa6, 0x45, 0xb8, 0xf9);

        [NativeTypeName("const IID")]
        public static readonly Guid MetaDataMergerOptions = new Guid(0x132d3a6e, 0xb35d, 0x464e, 0x95, 0x1a, 0x42, 0xef, 0xb9, 0xfb, 0x66, 0x1);

        [NativeTypeName("const IID")]
        public static readonly Guid MetaDataPreserveLocalRefs = new Guid(0xa55c0354, 0xe91b, 0x468b, 0x86, 0x48, 0x7c, 0xc3, 0x10, 0x35, 0xd5, 0x33);

        [NativeTypeName("const IID")]
        public static readonly Guid CLSID_Cor = new Guid(0xbee00010, 0xee77, 0x11d0, 0xa0, 0x15, 0x00, 0xc0, 0x4f, 0xbb, 0xb8, 0x84);

        [NativeTypeName("const IID")]
        public static readonly Guid CLSID_CorMetaDataDispenser = new Guid(0xe5cb7a31, 0x7512, 0x11d2, 0x89, 0xce, 0x0, 0x80, 0xc7, 0x92, 0xe5, 0xd8);

        [NativeTypeName("const IID")]
        public static readonly Guid CLSID_CorMetaDataDispenserReg = new Guid(0x435755ff, 0x7397, 0x11d2, 0x97, 0x71, 0x0, 0xa0, 0xc9, 0xb4, 0xd5, 0xc);

        [NativeTypeName("const IID")]
        public static readonly Guid CLSID_CorMetaDataReg = new Guid(0x87f3a1f5, 0x7397, 0x11d2, 0x97, 0x71, 0x0, 0xa0, 0xc9, 0xb4, 0xd5, 0xc);

        [NativeTypeName("const IID")]
        public static readonly Guid IID_IMetaDataError = new Guid(0xb81ff171, 0x20f3, 0x11d2, 0x8d, 0xcc, 0x0, 0xa0, 0xc9, 0xb0, 0x9c, 0x19);

        [NativeTypeName("const IID")]
        public static readonly Guid IID_IMapToken = new Guid(0x6a3ea8b, 0x225, 0x11d1, 0xbf, 0x72, 0x0, 0xc0, 0x4f, 0xc3, 0x1e, 0x12);

        [NativeTypeName("const IID")]
        public static readonly Guid IID_IMetaDataDispenser = new Guid(0x809c652e, 0x7396, 0x11d2, 0x97, 0x71, 0x00, 0xa0, 0xc9, 0xb4, 0xd5, 0x0c);

        [NativeTypeName("const IID")]
        public static readonly Guid IID_IMetaDataEmit = new Guid(0xba3fee4c, 0xecb9, 0x4e41, 0x83, 0xb7, 0x18, 0x3f, 0xa4, 0x1c, 0xd8, 0x59);

        [NativeTypeName("const IID")]
        public static readonly Guid IID_IMetaDataEmit2 = new Guid(0xf5dd9950, 0xf693, 0x42e6, 0x83, 0xe, 0x7b, 0x83, 0x3e, 0x81, 0x46, 0xa9);

        [NativeTypeName("const IID")]
        public static readonly Guid IID_IMetaDataImport = new Guid(0x7dac8207, 0xd3ae, 0x4c75, 0x9b, 0x67, 0x92, 0x80, 0x1a, 0x49, 0x7d, 0x44);

        [NativeTypeName("const IID")]
        public static readonly Guid IID_IMetaDataImport2 = new Guid(0xfce5efa0, 0x8bba, 0x4f8e, 0xa0, 0x36, 0x8f, 0x20, 0x22, 0xb0, 0x84, 0x66);

        [NativeTypeName("const IID")]
        public static readonly Guid IID_IMetaDataFilter = new Guid(0xd0e80dd1, 0x12d4, 0x11d3, 0xb3, 0x9d, 0x0, 0xc0, 0x4f, 0xf8, 0x17, 0x95);

        [NativeTypeName("const IID")]
        public static readonly Guid IID_IHostFilter = new Guid(0xd0e80dd3, 0x12d4, 0x11d3, 0xb3, 0x9d, 0x0, 0xc0, 0x4f, 0xf8, 0x17, 0x95);

        [NativeTypeName("const IID")]
        public static readonly Guid IID_IMetaDataAssemblyEmit = new Guid(0x211ef15b, 0x5317, 0x4438, 0xb1, 0x96, 0xde, 0xc8, 0x7b, 0x88, 0x76, 0x93);

        [NativeTypeName("const IID")]
        public static readonly Guid IID_IMetaDataAssemblyImport = new Guid(0xee62470b, 0xe94b, 0x424e, 0x9b, 0x7c, 0x2f, 0x0, 0xc9, 0x24, 0x9f, 0x93);

        [NativeTypeName("const IID")]
        public static readonly Guid IID_IMetaDataValidate = new Guid(0x4709c9c6, 0x81ff, 0x11d3, 0x9f, 0xc7, 0x0, 0xc0, 0x4f, 0x79, 0xa0, 0xa3);

        [NativeTypeName("const IID")]
        public static readonly Guid IID_IMetaDataDispenserEx = new Guid(0x31bcfce2, 0xdafb, 0x11d2, 0x9f, 0x81, 0x0, 0xc0, 0x4f, 0x79, 0xa0, 0xa3);

        [NativeTypeName("const IID")]
        public static readonly Guid IID_IMetaDataTables = new Guid(0xd8f579ab, 0x402d, 0x4b8e, 0x82, 0xd9, 0x5d, 0x63, 0xb1, 0x6, 0x5c, 0x68);

        [NativeTypeName("const IID")]
        public static readonly Guid IID_IMetaDataTables2 = new Guid(0xbadb5f70, 0x58da, 0x43a9, 0xa1, 0xc6, 0xd7, 0x48, 0x19, 0xf1, 0x9b, 0x15);

        [NativeTypeName("const IID")]
        public static readonly Guid IID_IMetaDataInfo = new Guid(0x7998EA64, 0x7F95, 0x48B8, 0x86, 0xFC, 0x17, 0xCA, 0xF4, 0x8B, 0xF5, 0xCB);

        public const int SIGN_MASK_ONEBYTE = unchecked((int)(0xffffffc0));
        public const int SIGN_MASK_TWOBYTE = unchecked((int)(0xffffe000));
        public const int SIGN_MASK_FOURBYTE = unchecked((int)(0xf0000000));
    }
}
